// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'dart:ui' as prefix6;
import 'package:example/fancy_container.dart' as prefix1;
import 'package:flutter/src/foundation/diagnostics.dart' as prefix4;
import 'package:flutter/src/foundation/key.dart' as prefix5;
import 'package:flutter/src/material/colors.dart' as prefix2;
import 'package:flutter/src/widgets/framework.dart' as prefix7;
import 'package:flutter_organized_widgets/model/lib_stuff.dart' as prefix0;
import 'package:meta/meta.dart' as prefix3;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'FancyContainer',
            r'.FancyContainer',
            7,
            0,
            const prefix0.Reflector(),
            const <int>[4, 5],
            const <int>[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4],
            const <int>[],
            -1,
            {},
            {},
            {r'': (b) => () => b ? prefix1.FancyContainer() : null},
            0,
            0,
            const <int>[],
            const <Object>[prefix0.reflector],
            null),
        r.NonGenericClassMirrorImpl(
            r'MyLoader',
            r'.MyLoader',
            7,
            1,
            const prefix0.Reflector(),
            const <int>[1, 19, 21],
            const <int>[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
            const <int>[],
            -1,
            {},
            {},
            {
              r'': (b) => ({key, color}) =>
                  b ? prefix1.MyLoader(color: color, key: key) : null
            },
            0,
            1,
            const <int>[],
            const <Object>[
              prefix0.reflector,
              const prefix0.Defaults(const [],
                  positioned: const {"color": prefix2.Colors.red})
            ],
            null),
        r.NonGenericClassMirrorImpl(
            r'WidgetData',
            r'.WidgetData',
            7,
            2,
            const prefix0.Reflector(),
            const <int>[2, 3, 22, 25],
            const <int>[
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              22,
              23,
              24
            ],
            const <int>[],
            -1,
            {},
            {},
            {
              r'': (b) => ({key, title, subtitle}) => b
                  ? prefix1.WidgetData(
                      key: key, subtitle: subtitle, title: title)
                  : null
            },
            0,
            2,
            const <int>[],
            const <Object>[
              prefix0.reflector,
              const prefix0.Defaults(const [], positioned: const {
                "title": "Hello there",
                "subtitle": "Yes you"
              })
            ],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'key', 33797, null, const prefix0.Reflector(), -1,
            3, 3, const <int>[], const []),
        r.VariableMirrorImpl(r'color', 33797, 1, const prefix0.Reflector(), -1,
            4, 4, const <int>[], const []),
        r.VariableMirrorImpl(r'title', 33797, 2, const prefix0.Reflector(), -1,
            5, 5, const <int>[], const []),
        r.VariableMirrorImpl(r'subtitle', 33797, 2, const prefix0.Reflector(),
            -1, 5, 5, const <int>[], const []),
        r.MethodMirrorImpl(
            r'build',
            131074,
            0,
            -1,
            6,
            6,
            const <int>[],
            const <int>[0],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(r'', 64, 0, -1, 0, 0, const <int>[], const <int>[],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(
            r'==',
            131074,
            null,
            -1,
            7,
            7,
            const <int>[],
            const <int>[1],
            const prefix0.Reflector(),
            const <Object>[override, prefix3.nonVirtual]),
        r.MethodMirrorImpl(
            r'toString',
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const <int>[2],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(r'noSuchMethod', 65538, null, null, null, null,
            const <int>[], const <int>[3], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(
            r'hashCode',
            131075,
            null,
            -1,
            8,
            8,
            const <int>[],
            const <int>[],
            const prefix0.Reflector(),
            const <Object>[override, prefix3.nonVirtual]),
        r.MethodMirrorImpl(r'runtimeType', 131075, null, -1, 9, 9,
            const <int>[], const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(
            r'toStringShort',
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const <int>[],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(
            r'toDiagnosticsNode',
            131074,
            null,
            -1,
            10,
            10,
            const <int>[],
            const <int>[4, 5],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(
            r'debugFillProperties',
            262146,
            null,
            null,
            11,
            11,
            const <int>[],
            const <int>[6],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(
            r'toStringShallow',
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const <int>[7, 8],
            const prefix0.Reflector(),
            const []),
        r.MethodMirrorImpl(
            r'toStringDeep',
            131074,
            null,
            -1,
            5,
            5,
            const <int>[],
            const <int>[9, 10, 11],
            const prefix0.Reflector(),
            const []),
        r.MethodMirrorImpl(
            r'debugDescribeChildren',
            4325378,
            null,
            -1,
            12,
            13,
            const <int>[10],
            const <int>[],
            const prefix0.Reflector(),
            const <Object>[prefix3.protected]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, 17),
        r.MethodMirrorImpl(
            r'createElement',
            131074,
            null,
            -1,
            14,
            14,
            const <int>[],
            const <int>[],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.MethodMirrorImpl(
            r'build',
            131074,
            1,
            -1,
            6,
            6,
            const <int>[],
            const <int>[12],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, 20),
        r.MethodMirrorImpl(r'', 128, 1, -1, 1, 1, const <int>[],
            const <int>[13, 14], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(
            r'build',
            131074,
            2,
            -1,
            6,
            6,
            const <int>[],
            const <int>[15],
            const prefix0.Reflector(),
            const <Object>[override]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 2, 23),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 3, 24),
        r.MethodMirrorImpl(r'', 128, 2, -1, 2, 2, const <int>[],
            const <int>[16, 17, 18], const prefix0.Reflector(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'context', 32774, 4, const prefix0.Reflector(),
            -1, 15, 15, const <int>[], const [], null, null),
        r.ParameterMirrorImpl(r'other', 32774, 6, const prefix0.Reflector(), -1,
            16, 16, const <int>[], const [], null, null),
        r.ParameterMirrorImpl(
            r'minLevel',
            47110,
            7,
            const prefix0.Reflector(),
            -1,
            17,
            17,
            const <int>[],
            const [],
            prefix4.DiagnosticLevel.info,
            #minLevel),
        r.ParameterMirrorImpl(
            r'invocation',
            32774,
            8,
            const prefix0.Reflector(),
            -1,
            18,
            18,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(r'name', 45062, 12, const prefix0.Reflector(), -1,
            5, 5, const <int>[], const [], null, #name),
        r.ParameterMirrorImpl(r'style', 45062, 12, const prefix0.Reflector(),
            -1, 19, 19, const <int>[], const [], null, #style),
        r.ParameterMirrorImpl(
            r'properties',
            32774,
            13,
            const prefix0.Reflector(),
            -1,
            20,
            20,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(r'joiner', 47110, 14, const prefix0.Reflector(),
            -1, 5, 5, const <int>[], const [], ', ', #joiner),
        r.ParameterMirrorImpl(
            r'minLevel',
            47110,
            14,
            const prefix0.Reflector(),
            -1,
            17,
            17,
            const <int>[],
            const [],
            prefix4.DiagnosticLevel.debug,
            #minLevel),
        r.ParameterMirrorImpl(
            r'prefixLineOne',
            47110,
            15,
            const prefix0.Reflector(),
            -1,
            5,
            5,
            const <int>[],
            const [],
            '',
            #prefixLineOne),
        r.ParameterMirrorImpl(
            r'prefixOtherLines',
            45062,
            15,
            const prefix0.Reflector(),
            -1,
            5,
            5,
            const <int>[],
            const [],
            null,
            #prefixOtherLines),
        r.ParameterMirrorImpl(
            r'minLevel',
            47110,
            15,
            const prefix0.Reflector(),
            -1,
            17,
            17,
            const <int>[],
            const [],
            prefix4.DiagnosticLevel.debug,
            #minLevel),
        r.ParameterMirrorImpl(r'context', 32774, 19, const prefix0.Reflector(),
            -1, 15, 15, const <int>[], const [], null, null),
        r.ParameterMirrorImpl(r'key', 45062, 21, const prefix0.Reflector(), -1,
            3, 3, const <int>[], const [], null, #key),
        r.ParameterMirrorImpl(r'color', 45062, 21, const prefix0.Reflector(),
            -1, 4, 4, const <int>[], const [], null, #color),
        r.ParameterMirrorImpl(r'context', 32774, 22, const prefix0.Reflector(),
            -1, 15, 15, const <int>[], const [], null, null),
        r.ParameterMirrorImpl(r'key', 45062, 25, const prefix0.Reflector(), -1,
            3, 3, const <int>[], const [], null, #key),
        r.ParameterMirrorImpl(r'title', 45062, 25, const prefix0.Reflector(),
            -1, 5, 5, const <int>[], const [], null, #title),
        r.ParameterMirrorImpl(r'subtitle', 45062, 25, const prefix0.Reflector(),
            -1, 5, 5, const <int>[], const [], null, #subtitle)
      ],
      <Type>[
        prefix1.FancyContainer,
        prefix1.MyLoader,
        prefix1.WidgetData,
        prefix5.Key,
        prefix6.Color,
        String,
        prefix7.Widget,
        bool,
        int,
        Type,
        prefix4.DiagnosticsNode,
        const m.TypeValue<void>().type,
        const m.TypeValue<List<prefix4.DiagnosticsNode>>().type,
        List,
        prefix7.StatelessElement,
        prefix7.BuildContext,
        Object,
        prefix4.DiagnosticLevel,
        Invocation,
        prefix4.DiagnosticsTreeStyle,
        prefix4.DiagnosticPropertiesBuilder
      ],
      3,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'toStringShort': (dynamic instance) => instance.toStringShort,
        r'toDiagnosticsNode': (dynamic instance) => instance.toDiagnosticsNode,
        r'debugFillProperties': (dynamic instance) =>
            instance.debugFillProperties,
        r'toStringShallow': (dynamic instance) => instance.toStringShallow,
        r'toStringDeep': (dynamic instance) => instance.toStringDeep,
        r'debugDescribeChildren': (dynamic instance) =>
            instance.debugDescribeChildren,
        r'key': (dynamic instance) => instance.key,
        r'createElement': (dynamic instance) => instance.createElement,
        r'build': (dynamic instance) => instance.build,
        r'color': (dynamic instance) => instance.color,
        r'title': (dynamic instance) => instance.title,
        r'subtitle': (dynamic instance) => instance.subtitle
      },
      {},
      <m.LibraryMirror>[
        r.LibraryMirrorImpl(r'', Uri.parse(r'reflectable://0/'),
            const prefix0.Reflector(), const <int>[], {}, {}, const [], null)
      ],
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
